#!/usr/bin/env node
const path  = require('path');
const fs    = require('fs');
const fpark = require('./src');

let _config = {};

let _path = process.cwd();

function loadConfig (pathConfig) {
  let _configPath = pathConfig ? path.join(process.cwd(), pathConfig) : path.join(_path, 'fpark.json');
  console.log(_configPath);
  if (fs.existsSync(_configPath)) {
    _config = fs.readFileSync(_configPath, 'utf8');

    try {
      _config = JSON.parse(_config);
    }
    catch (e) {
      throw new Error('.fpark is not a valid JSON file');

    }
  }
}

function printUsage () {
  console.log('fpark')
  console.log('===============================================');
  console.group('Commands');
  console.log('start', '\t', 'Start the server');
  console.groupEnd('Commands');
}

let _args     = process.argv.slice(2);
let _commands = ['start'];

if (_commands.indexOf(_args[0]) === -1) {
  return printUsage();
}

let _argValues = {};

for (let i = 0; i < _args.length; i++) {
  switch (_args[i]) {
    case '-c':
      _argValues['c'] = _args[i + 1] || null;
      i++;
      break;
  }
}

loadConfig(_argValues['c']);
fpark.start(_config);
